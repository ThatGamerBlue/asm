@file:Suppress("unused")

package org.spectral.asm.core.code

import kotlin.Int
import kotlin.reflect.KClass

enum class InstructionType(val opcode: Int, val source: KClass<out Instruction>) {
  NOP(0, org.spectral.asm.core.code.instruction.NOP::class),
  ACONST_NULL(1, org.spectral.asm.core.code.instruction.ACONST_NULL::class),
  ICONST_M1(2, org.spectral.asm.core.code.instruction.ICONST_M1::class),
  ICONST_0(3, org.spectral.asm.core.code.instruction.ICONST_0::class),
  ICONST_1(4, org.spectral.asm.core.code.instruction.ICONST_1::class),
  ICONST_2(5, org.spectral.asm.core.code.instruction.ICONST_2::class),
  ICONST_3(6, org.spectral.asm.core.code.instruction.ICONST_3::class),
  ICONST_4(7, org.spectral.asm.core.code.instruction.ICONST_4::class),
  ICONST_5(8, org.spectral.asm.core.code.instruction.ICONST_5::class),
  LCONST_0(9, org.spectral.asm.core.code.instruction.LCONST_0::class),
  LCONST_1(10, org.spectral.asm.core.code.instruction.LCONST_1::class),
  FCONST_0(11, org.spectral.asm.core.code.instruction.FCONST_0::class),
  FCONST_1(12, org.spectral.asm.core.code.instruction.FCONST_1::class),
  FCONST_2(13, org.spectral.asm.core.code.instruction.FCONST_2::class),
  DCONST_0(14, org.spectral.asm.core.code.instruction.DCONST_0::class),
  DCONST_1(15, org.spectral.asm.core.code.instruction.DCONST_1::class),
  BIPUSH(16, org.spectral.asm.core.code.instruction.BIPUSH::class),
  SIPUSH(17, org.spectral.asm.core.code.instruction.SIPUSH::class),
  LDC(18, org.spectral.asm.core.code.instruction.LDC::class),
  ILOAD(21, org.spectral.asm.core.code.instruction.ILOAD::class),
  LLOAD(22, org.spectral.asm.core.code.instruction.LLOAD::class),
  FLOAD(23, org.spectral.asm.core.code.instruction.FLOAD::class),
  DLOAD(24, org.spectral.asm.core.code.instruction.DLOAD::class),
  ALOAD(25, org.spectral.asm.core.code.instruction.ALOAD::class),
  IALOAD(46, org.spectral.asm.core.code.instruction.IALOAD::class),
  LALOAD(47, org.spectral.asm.core.code.instruction.LALOAD::class),
  FALOAD(48, org.spectral.asm.core.code.instruction.FALOAD::class),
  DALOAD(49, org.spectral.asm.core.code.instruction.DALOAD::class),
  AALOAD(50, org.spectral.asm.core.code.instruction.AALOAD::class),
  BALOAD(51, org.spectral.asm.core.code.instruction.BALOAD::class),
  CALOAD(52, org.spectral.asm.core.code.instruction.CALOAD::class),
  SALOAD(53, org.spectral.asm.core.code.instruction.SALOAD::class),
  ISTORE(54, org.spectral.asm.core.code.instruction.ISTORE::class),
  LSTORE(55, org.spectral.asm.core.code.instruction.LSTORE::class),
  FSTORE(56, org.spectral.asm.core.code.instruction.FSTORE::class),
  DSTORE(57, org.spectral.asm.core.code.instruction.DSTORE::class),
  ASTORE(58, org.spectral.asm.core.code.instruction.ASTORE::class),
  IASTORE(79, org.spectral.asm.core.code.instruction.IASTORE::class),
  LASTORE(80, org.spectral.asm.core.code.instruction.LASTORE::class),
  FASTORE(81, org.spectral.asm.core.code.instruction.FASTORE::class),
  DASTORE(82, org.spectral.asm.core.code.instruction.DASTORE::class),
  AASTORE(83, org.spectral.asm.core.code.instruction.AASTORE::class),
  BASTORE(84, org.spectral.asm.core.code.instruction.BASTORE::class),
  CASTORE(85, org.spectral.asm.core.code.instruction.CASTORE::class),
  SASTORE(86, org.spectral.asm.core.code.instruction.SASTORE::class),
  POP(87, org.spectral.asm.core.code.instruction.POP::class),
  POP2(88, org.spectral.asm.core.code.instruction.POP2::class),
  DUP(89, org.spectral.asm.core.code.instruction.DUP::class),
  DUP_X1(90, org.spectral.asm.core.code.instruction.DUP_X1::class),
  DUP_X2(91, org.spectral.asm.core.code.instruction.DUP_X2::class),
  DUP2(92, org.spectral.asm.core.code.instruction.DUP2::class),
  DUP2_X1(93, org.spectral.asm.core.code.instruction.DUP2_X1::class),
  DUP2_X2(94, org.spectral.asm.core.code.instruction.DUP2_X2::class),
  SWAP(95, org.spectral.asm.core.code.instruction.SWAP::class),
  IADD(96, org.spectral.asm.core.code.instruction.IADD::class),
  LADD(97, org.spectral.asm.core.code.instruction.LADD::class),
  FADD(98, org.spectral.asm.core.code.instruction.FADD::class),
  DADD(99, org.spectral.asm.core.code.instruction.DADD::class),
  ISUB(100, org.spectral.asm.core.code.instruction.ISUB::class),
  LSUB(101, org.spectral.asm.core.code.instruction.LSUB::class),
  FSUB(102, org.spectral.asm.core.code.instruction.FSUB::class),
  DSUB(103, org.spectral.asm.core.code.instruction.DSUB::class),
  IMUL(104, org.spectral.asm.core.code.instruction.IMUL::class),
  LMUL(105, org.spectral.asm.core.code.instruction.LMUL::class),
  FMUL(106, org.spectral.asm.core.code.instruction.FMUL::class),
  DMUL(107, org.spectral.asm.core.code.instruction.DMUL::class),
  IDIV(108, org.spectral.asm.core.code.instruction.IDIV::class),
  LDIV(109, org.spectral.asm.core.code.instruction.LDIV::class),
  FDIV(110, org.spectral.asm.core.code.instruction.FDIV::class),
  DDIV(111, org.spectral.asm.core.code.instruction.DDIV::class),
  IREM(112, org.spectral.asm.core.code.instruction.IREM::class),
  LREM(113, org.spectral.asm.core.code.instruction.LREM::class),
  FREM(114, org.spectral.asm.core.code.instruction.FREM::class),
  DREM(115, org.spectral.asm.core.code.instruction.DREM::class),
  INEG(116, org.spectral.asm.core.code.instruction.INEG::class),
  LNEG(117, org.spectral.asm.core.code.instruction.LNEG::class),
  FNEG(118, org.spectral.asm.core.code.instruction.FNEG::class),
  DNEG(119, org.spectral.asm.core.code.instruction.DNEG::class),
  ISHL(120, org.spectral.asm.core.code.instruction.ISHL::class),
  LSHL(121, org.spectral.asm.core.code.instruction.LSHL::class),
  ISHR(122, org.spectral.asm.core.code.instruction.ISHR::class),
  LSHR(123, org.spectral.asm.core.code.instruction.LSHR::class),
  IUSHR(124, org.spectral.asm.core.code.instruction.IUSHR::class),
  LUSHR(125, org.spectral.asm.core.code.instruction.LUSHR::class),
  IAND(126, org.spectral.asm.core.code.instruction.IAND::class),
  LAND(127, org.spectral.asm.core.code.instruction.LAND::class),
  IOR(128, org.spectral.asm.core.code.instruction.IOR::class),
  LOR(129, org.spectral.asm.core.code.instruction.LOR::class),
  IXOR(130, org.spectral.asm.core.code.instruction.IXOR::class),
  LXOR(131, org.spectral.asm.core.code.instruction.LXOR::class),
  IINC(132, org.spectral.asm.core.code.instruction.IINC::class),
  I2L(133, org.spectral.asm.core.code.instruction.I2L::class),
  I2F(134, org.spectral.asm.core.code.instruction.I2F::class),
  I2D(135, org.spectral.asm.core.code.instruction.I2D::class),
  L2I(136, org.spectral.asm.core.code.instruction.L2I::class),
  L2F(137, org.spectral.asm.core.code.instruction.L2F::class),
  L2D(138, org.spectral.asm.core.code.instruction.L2D::class),
  F2I(139, org.spectral.asm.core.code.instruction.F2I::class),
  F2L(140, org.spectral.asm.core.code.instruction.F2L::class),
  F2D(141, org.spectral.asm.core.code.instruction.F2D::class),
  D2I(142, org.spectral.asm.core.code.instruction.D2I::class),
  D2L(143, org.spectral.asm.core.code.instruction.D2L::class),
  D2F(144, org.spectral.asm.core.code.instruction.D2F::class),
  I2B(145, org.spectral.asm.core.code.instruction.I2B::class),
  I2C(146, org.spectral.asm.core.code.instruction.I2C::class),
  I2S(147, org.spectral.asm.core.code.instruction.I2S::class),
  LCMP(148, org.spectral.asm.core.code.instruction.LCMP::class),
  FCMPL(149, org.spectral.asm.core.code.instruction.FCMPL::class),
  FCMPG(150, org.spectral.asm.core.code.instruction.FCMPG::class),
  DCMPL(151, org.spectral.asm.core.code.instruction.DCMPL::class),
  DCMPG(152, org.spectral.asm.core.code.instruction.DCMPG::class),
  IFEQ(153, org.spectral.asm.core.code.instruction.IFEQ::class),
  IFNE(154, org.spectral.asm.core.code.instruction.IFNE::class),
  IFLT(155, org.spectral.asm.core.code.instruction.IFLT::class),
  IFGE(156, org.spectral.asm.core.code.instruction.IFGE::class),
  IFGT(157, org.spectral.asm.core.code.instruction.IFGT::class),
  IFLE(158, org.spectral.asm.core.code.instruction.IFLE::class),
  IF_ICMPEQ(159, org.spectral.asm.core.code.instruction.IF_ICMPEQ::class),
  IF_ICMPNE(160, org.spectral.asm.core.code.instruction.IF_ICMPNE::class),
  IF_ICMPLT(161, org.spectral.asm.core.code.instruction.IF_ICMPLT::class),
  IF_ICMPGE(162, org.spectral.asm.core.code.instruction.IF_ICMPGE::class),
  IF_ICMPGT(163, org.spectral.asm.core.code.instruction.IF_ICMPGT::class),
  IF_ICMPLE(164, org.spectral.asm.core.code.instruction.IF_ICMPLE::class),
  IF_ACMPEQ(165, org.spectral.asm.core.code.instruction.IF_ACMPEQ::class),
  IF_ACMPNE(166, org.spectral.asm.core.code.instruction.IF_ACMPNE::class),
  GOTO(167, org.spectral.asm.core.code.instruction.GOTO::class),
  JSR(168, org.spectral.asm.core.code.instruction.JSR::class),
  RET(169, org.spectral.asm.core.code.instruction.RET::class),
  TABLESWITCH(170, org.spectral.asm.core.code.instruction.TABLESWITCH::class),
  LOOKUPSWITCH(171, org.spectral.asm.core.code.instruction.LOOKUPSWITCH::class),
  IRETURN(172, org.spectral.asm.core.code.instruction.IRETURN::class),
  LRETURN(173, org.spectral.asm.core.code.instruction.LRETURN::class),
  FRETURN(174, org.spectral.asm.core.code.instruction.FRETURN::class),
  DRETURN(175, org.spectral.asm.core.code.instruction.DRETURN::class),
  ARETURN(176, org.spectral.asm.core.code.instruction.ARETURN::class),
  RETURN(177, org.spectral.asm.core.code.instruction.RETURN::class),
  GETSTATIC(178, org.spectral.asm.core.code.instruction.GETSTATIC::class),
  PUTSTATIC(179, org.spectral.asm.core.code.instruction.PUTSTATIC::class),
  GETFIELD(180, org.spectral.asm.core.code.instruction.GETFIELD::class),
  PUTFIELD(181, org.spectral.asm.core.code.instruction.PUTFIELD::class),
  INVOKEVIRTUAL(182, org.spectral.asm.core.code.instruction.INVOKEVIRTUAL::class),
  INVOKESPECIAL(183, org.spectral.asm.core.code.instruction.INVOKESPECIAL::class),
  INVOKESTATIC(184, org.spectral.asm.core.code.instruction.INVOKESTATIC::class),
  INVOKEINTERFACE(185, org.spectral.asm.core.code.instruction.INVOKEINTERFACE::class),
  INVOKEDYNAMIC(186, org.spectral.asm.core.code.instruction.INVOKEDYNAMIC::class),
  NEW(187, org.spectral.asm.core.code.instruction.NEW::class),
  NEWARRAY(188, org.spectral.asm.core.code.instruction.NEWARRAY::class),
  ANEWARRAY(189, org.spectral.asm.core.code.instruction.ANEWARRAY::class),
  ARRAYLENGTH(190, org.spectral.asm.core.code.instruction.ARRAYLENGTH::class),
  ATHROW(191, org.spectral.asm.core.code.instruction.ATHROW::class),
  CHECKCAST(192, org.spectral.asm.core.code.instruction.CHECKCAST::class),
  INSTANCEOF(193, org.spectral.asm.core.code.instruction.INSTANCEOF::class),
  MONITORENTER(194, org.spectral.asm.core.code.instruction.MONITORENTER::class),
  MONITOREXIT(195, org.spectral.asm.core.code.instruction.MONITOREXIT::class),
  MULTIANEWARRAY(197, org.spectral.asm.core.code.instruction.MULTIANEWARRAY::class),
  IFNULL(198, org.spectral.asm.core.code.instruction.IFNULL::class),
  IFNONNULL(199, org.spectral.asm.core.code.instruction.IFNONNULL::class);

  companion object {
    val values = enumValues<InstructionType>()

    fun ofOpcode(opcode: Int): InstructionType {
      return values.firstOrNull { it.opcode == opcode }
              ?: throw IllegalArgumentException("InstructionType not found for opcode: $opcode.")
    }
  }
}
